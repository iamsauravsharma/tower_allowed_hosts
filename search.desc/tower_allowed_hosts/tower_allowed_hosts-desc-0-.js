searchState.loadedDescShard("tower_allowed_hosts", 0, "Crate which provides allowed hosts layer for tower based …\nAllowed hosts layer to check if provided host is valid or …\nStruct which holds value of host along with its port.\nmodule for error\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nmodule for layer, service and future\nEnum for different error generated from crates\nerror when host is failed to resolve\nerror raised when host is not allowed\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nAllowed hosts service\nFuture for Allowed hosts\nAllowed hosts layer to check if provided host is valid or …\nExtend allowed hosts list using normal string. To match …\nExtend allowed hosts list using regex. Regex is check to …\nExtend allowed hosts list using wildcard.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReject request is one header have multiple host. For …\nSet <code>use_forwarded</code> to provided value. If it is set to true …\nSet <code>use_x_forwarded_host</code> to provided value. If it is set …")