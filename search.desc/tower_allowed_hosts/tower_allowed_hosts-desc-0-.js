searchState.loadedDescShard("tower_allowed_hosts", 0, "Crate which provides allowed hosts layer for tower based …\nAllowed hosts layer to check if the provided host is valid.\nStruct which holds value of host along with its port in …\nTrait for matcher\nmodule for error\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nmodule for matcher\nCheck if provided host value gets match or not\nmodule for layer, service and future\nEnum for different error generated from crates\nerror when host is failed to resolve\nerror raised when host is not allowed\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nTrait for matcher\nCheck if provided host value gets match or not\nAllowed hosts service that wraps the inner service and …\nFuture for AllowedHost service.\nAllowed hosts layer to check if the provided host is valid.\nExtend allowed hosts layer with provided matchers\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate new allowed hosts layer with provide matchers\nAdd a matcher to allowed hosts layer\nConfigure the layer to reject requests with multiple host …\nEnable or disable the use of the <code>Forwarded</code> header.\nEnable or disable the use of the <code>X-Forwarded-Host</code> header.")