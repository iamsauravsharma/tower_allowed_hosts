rd_("B`Struct which holds value of hostAoReturns the argument unchanged.00000BaCalls <code>U::from(self)</code>.00000BnEnum for different error generated from cratesA`module for errorCjTrait for checking if a given value matches a specific \xe2\x80\xa6Abmodule for matcherBdmodule for layer, service and futureCnAsterisk matcher which always returns true and matches any \xe2\x80\xa6BbAdd a host to allowed hosts layer.CjAllowed hosts service that wraps the inner service and \xe2\x80\xa6BnExtend allowed hosts layer with provided hostsCeChecks if provided value matches according to matcherBeerror raised when host is not allowedCmA layer that validates and allows incoming requests based \xe2\x80\xa60C`error when uri is missing along with host headerBlFuture for <code>AllowedHost</code> service.Bherror when passed host header is invalidBherror when passed host header is missingBherror when there is multiple host headerClCrate which provides allowed hosts layer for tower based \xe2\x80\xa6Bmerror when passed forwarded header is invalidDeAdd a token-value pair for matching in the <code>Forwarded</code> \xe2\x80\xa6CmExtend allowed hosts layer with provided forwarded header \xe2\x80\xa6")