var searchIndex = new Map(JSON.parse('[\
["tower_allowed_hosts",{"doc":"Crate which provides allowed hosts layer for tower based …","t":"FFFGPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN","n":["AllowedHost","AllowedHostFuture","AllowedHostLayer","Error","FailedToResolveHost","HostNotAllowed","allowed_hosts","allowed_hosts_regex","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","call","clone","clone","clone_into","clone_into","default","extend_host","extend_regex_host","fmt","fmt","from","from","from","from","into","into","into","into","into_future","layer","new","new_regex","poll","poll_ready","set_use_forwarded","set_use_x_forwarded_host","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","use_forwarded","use_x_forwarded_host"],"q":[[0,"tower_allowed_hosts"],[59,"alloc::string"],[60,"regex::regex::string"],[61,"http::request"],[62,"http::response"],[63,"tower_service"],[64,"core::clone"],[65,"core::convert"],[66,"core::fmt"],[67,"core::fmt"],[68,"core::pin"],[69,"core::task::wake"],[70,"core::task::poll"],[71,"tower"],[72,"core::result"],[73,"core::future::future"],[74,"core::any"]],"d":["Allowed hosts service","Future for Allowed hosts","Allowed hosts layer which implements tower layer trait and …","Enum for different error","error when host is failed to resolve","error raised when host is not allowed","Get allowed hosts","Get allowed hosts regex","","","","","","","","","","","","","","","Extend allowed hosts list","Extend allowed hosts regex list","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Create new allowed hosts layer","Create new allowed hosts layer with regex","","","Set <code>use_forwarded</code> to provided value. If it is set to true …","Set <code>use_x_forwarded_host</code> to provided value. If it is set …","","","","","","","","","","","","","","","","Get if <code>Forwarded</code> header is used to determine host","Get if <code>X-Forwarded-Host</code> header is used to determine host"],"i":[0,0,0,0,13,13,1,1,13,1,5,18,13,1,5,18,5,1,5,1,5,1,1,1,13,13,13,1,5,18,13,1,5,18,18,1,1,1,18,5,1,1,1,5,13,13,1,5,18,13,1,5,18,13,1,5,18,1,1],"f":[0,0,0,0,0,0,[1,[[3,[2]]]],[1,[[3,[4]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[5,[-3]],[6,[-1]]],-4,[],[],[[9,[[6,[-1]]],[[7,[[8,[-2]]]]]]],[]],[1,1],[[[5,[-1]]],[[5,[-1]]],10],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[],1],[[1,-1],1,[[12,[2]]]],[[1,4],1],[[13,14],15],[[13,14],15],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[],[]],[[1,-1],-2,[],[]],[-2,1,[[12,[2]]],[[17,[],[[16,[-1]]]]]],[-1,1,[[17,[],[[16,[4]]]]]],[[[19,[[18,[-3]]]],20],[[21,[-4]]],[],[[12,[22]]],[[25,[],[[23,[[24,[-1,-2]]]]]]],[]],[[[5,[-3]],20],[[21,[[24,[11,-4]]]]],[],[],[[9,[[6,[-1]]],[[7,[[8,[-2]]]]]]],[]],[[1,26],1],[[1,26],1],[-1,-2,[],[]],[-1,-2,[],[]],[-1,2,[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,27,[]],[-1,27,[]],[-1,27,[]],[-1,27,[]],[1,26],[1,26]],"c":[],"p":[[5,"AllowedHostLayer",0],[5,"String",59],[1,"slice"],[5,"Regex",60],[5,"AllowedHost",0],[5,"Request",61],[17,"Response"],[5,"Response",62],[10,"Service",63],[10,"Clone",64],[1,"tuple"],[10,"Into",65],[6,"Error",0],[5,"Formatter",66],[8,"Result",66],[17,"Item"],[10,"IntoIterator",67],[5,"AllowedHostFuture",0],[5,"Pin",68],[5,"Context",69],[6,"Poll",70],[8,"BoxError",71],[17,"Output"],[6,"Result",72],[10,"Future",73],[1,"bool"],[5,"TypeId",74]],"b":[[24,"impl-Display-for-Error"],[25,"impl-Debug-for-Error"]]}]\
]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
